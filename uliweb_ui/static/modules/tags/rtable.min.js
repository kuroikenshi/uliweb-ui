riot.tag2("rtable",'<yield></yield> <table class="{options.tableClass}"> <thead> <tr> <th each="{c in cols}" riot-style="{c.style}">{c.label || c.name}</th> </tr> </thead> <tbody> <tr each="{row, index in rows.get()}"> <td each="{col, colval in parent.cols}"> <raw if="{!col.buttons}" content="{parent.parent.get_col_data(parent.row, parent.index, col, colval)}"></raw> <virtual if="{col.buttons}" each="{btn in col.buttons}"> <i if="{btn.icon}" class="fa fa-{btn.icon} action" title="{btn.title}" onclick="{parent.parent.action_click(parent.parent.row, btn)}"></i> <a if="{btn.label}" class="action" title="{btn.title}" href="{btn.href || \'#\'}" onclick="{parent.parent.action_click(parent.parent.row, btn)}">{btn.label}</a> </virtual> </td> </tr> </tbody> </table>','rtable rcol,[riot-tag="rtable"] rcol,[data-is="rtable"] rcol{display: none} rtable .table,[riot-tag="rtable"] .table,[data-is="rtable"] .table{margin-bottom:0px;} rtable .action,[riot-tag="rtable"] .action,[data-is="rtable"] .action{cursor:pointer;}',"",function(t){var n=this,a=n.root;this.cols=t.cols,this.options=t.options||{},t.data?Array.isArray(t.data)?(this.rows=new DataSet,this.rows.add(t.data)):this.rows=t.data:this.rows=new DataSet,this.bind=function(t){t.on("*",function(a,o){n.options.onUpdate&&n.options.onUpdate(t),n.update()})},this.on("mount",function(){for(var t=0,a=n.cols.length;t<a;t++){var o=n.cols[t];o.style="",o.width&&(o.style="width:"+o.width)}n.bind(n.rows)}),a.load=function(t){n.rows.clear(),n.rows.add(t)}.bind(this),a.change=function(t){n.rows.update(t)}.bind(this),a.setData=function(t){n.rows=t,n.bind(n.rows)}.bind(this),this.get_col_data=function(t,n,a,o){var i="";return a.render&&"function"==typeof a.render?a.render(t,n,a,o):i="#"==a.name?n+1:t[a.name]},this.action_click=function(t,n){return function(a){n.onclick&&"function"==typeof n.onclick&&n.onclick.call(a.target,t)}}}),riot.tag2("raw","<span></span>","","",function(t){this.on("update",function(){this.root.innerHTML=t.content})});